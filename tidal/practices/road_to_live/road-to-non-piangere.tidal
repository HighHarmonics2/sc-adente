bpm(113)

-- prattino
d1
  $ every 3 (chew 3 4)
  $ superimpose (
      (# accelerate "15")
      .(|* speed 0.5)
      .((range 0.5 4 $ slow 4 $ sine) ~>)
      .(|+ n "3")
      .(# scram 0.3)
  )
  $ every 4 (iter 3)
  $ rarely (stut 6 0.6 0.18)
  $ n "[[1,8,13] 14 ~!3 [0,17,12], ~!4 7*2 22*3?]"
  # s "stab"
  # hp' 60 0.3
  -- # crush (trigger 1 $ range 16 0 $ slow 32 $ envL)

d2
  -- $ rarely (ply 3)
  $ superimpose (
    (# octave 2)
    .(slow 2)
  )
  $ euclid (choose [3,5]) 6
  $ rarely (|+ n "3")
  $ n "[[1,5,8],[4,8,11]]"
  # s "superpiano"
  # gain 0.8
  # octave 4
  -- # waveloss 99

d2 silence

d3
  $ gap 4
  $ juxBy (range "-1" "1" $ slow 4 $ perlin)
    ((rev).(2.99 ~>))
  $ plyWith 6 ((|* speed 3).(# scram 0.5))
  $ scramble (run 7)
  $ brak
  $ n "3*6"
  # s "osc"
  # speed (range 2 12 $ slow 2 $ saw)
  # accelerate (range "-1" "1" $ slow 2 isaw)
  # del' "[0 0.43 0.88]" 0.31 0.12
  -- # waveloss (trigger 3 $ range 0 100 $ slow 20 $ envL)

hush


-- carizzatide (sssplode)
d1
  $ superimpose (
      (fast 6)
      .(|* speed (((irand 13)+7)*3))
      .(degradeBy 0.6)
      .(# pan rand)
      .(#del' 0.39 0.21 0.12)
      .(sometimes (#freeze 1))
  )
  $ rarely (iter 3)
  $ every 3 (chew 3 6)
  $ almostNever (# crush 3)
  $ sometimes (striate 6)
  $ n "[0*3, [12/3] [15 ~]*2 [17 21]*3 23, 10*7?]"
  # s "stab"
  # pan "[0,-0.6,0.6]"

hush

-- bitume
d1
  $ every 4 (scramble 3)
  $ almostNever (chew 3 6)
  $ whenmod 9 6 ((linger 0.33).(# del' 0.99 0.99 0.99))
  $ n "[14 18*2, [~!2 14]*2 19]"
  # s "stab"
  # speed (range 0.92 1.09 $ rand)
  # waveloss 99

d1 silence

d2
  $ every 6 (|+ n 3)
  $ whenmod 12 9 (fast 2)
  $ superimpose (
    (# octave 2).(0.09 ~>)
  )
  $ n "[1,5,8]*3"
  # s "superpiano"
  # waveloss 29
  # octave 3
  # gain 0.9

d3
  $ juxBy (range "-1" "1" $ perlin) (rev)
  $ superimpose (
    (#speed (range 2 12 $ slow 2 $ sine))
    .(# del' 0.55 0.18 0.1667)
    .(sometimesBy 0.06 (# accelerate 3))
    .(rarely (# binshift 0.2))
    .(# accelerate (range "-3" "3" $ slow 3 $ cosine))
    .(stut 9 0.6 0.12)
    .(#freeze "[0 0 1 0]")
  )
  $ sometimesBy 0.09 ((# crush 4).(slow 1.5))
  $ s "osc:3*6"
  # crush 1

xfadeIn 3 4 $ silence

d4
  $ foldEvery [3,5,7,9] (|+ octave (irand 4 - 2))
  $ n "4*3"
  # s "uou"
  # octave 6
  # legato 2

clutchIn 5 4 $ silence

d5
  $ s "entropy*2"
  # octave 2
  # accelerate "-4"
  # legato 3

hush


-- pippianto

bpm(113)

d1
  $ superimpose (
    (|+ octave 2)
    .(# waveloss 18)
    .((choose [0.33, 0.66]) ~>)
  )
  $ rarely (|+ octave "[-1,1,-1]")
  $ slow 2
  $ n "[1,3,5]*3"
  # s "superpiano"
  # octave "[3,2,3]"
  -- |- octave 5  -- arma letame
  # rvb' 0.99 0.99
  # del' 0.44 0.12 0.11

hush

d2
  $ whenmod 9 6 (|- n 3)
  $ juxBy (range "-1" "1" $ slow 6 $ sine) ((|- octave 1).(|+ n 4))
  $ s "gfreeze"
  # legato 3
  # octave 5
  # scram 0.6
  # shape 0.4
  # rvb' 0.4 0.8
  -- # waveloss (trigger 2 $ range 0 100 $ slow 12 $ envL)

d3
  $ jux ((rev).(iter 3))
  $ rarely (superimpose ((|* speed 21).(# lp' 5000 0.2).(# del' 0.21 0.22 0.12)))
  $ almostNever (stutWith 3 0.09 (striate 3))
  $ n "4*6"
  # s "osc"
  # speed (range 2 12 $ slow 3 $ (tri+cosine)/2)
  # accelerate (range "-3" "3" $ slow 6 $ (sine + saw)/2)
  # binshift (range 0.2 0.8 $ slow 9 $ perlin)
  # comb (range 0.1 0.7 $ slow 12 $ cosine)
  -- # waveloss (trigger 3 $ range 0 100 $ slow 12 $ envL)


-- ppappaaccale
d1
  $ superimpose (
    (+ octave 2)
    .((segment 1 $ choose([0.33,0.66])) ~>)
    .(degradeBy 0.33)
    .(# waveloss 18)
  )
  $ sometimes (|+ octave "[-1,1,-1]")
  $ slow 2
  $ n "[1,5,8]*3"
  # s "superpiano"
  # octave "[3,2,3]"
  # legato 3
  # rvb' 0.2 0.4

d2
  $ juxBy (range "-1" "1" $ slow 6 $ sine) (|- octave 1)
  $ whenmod 9 6 (|- n 4)
  $ s "gfreeze"
  # legato 2
  # rvb' 0.3 0.6

  hush

-- bombeeee

bpm(99)

do
  d1
    $ superimpose (
        (# octave 3)
        .(fast 2)
        .(sometimes (# crush 4))
        .(# pan (slow 4 sine))
        .(# hp' 50 0.2)
    )
    $ jux ((|- n 4).((range 0 0.1 $ slow 4 $ saw)~>))
    $ almostNever (plyWith 3 (|+ octave 2))
    $ euclid 18 21
    $ s "pingz"
    # n (sine*16 - 8)
    # lp' (range 1300 7500 $ slow 12 $ (tri + saw)/2) 0.1
  d2
    $ superimpose (
        (|- octave 2)
        .(slow 2)
    )
    $ euclid 4 7
    $ n "[1,[3|5|4],8]"
    # s "superpiano"
    # octave 3
    # legato 2
    # binshift (range 0.4 0.8 $ slow 4 $ saw)
    # scram 0.8
    # waveloss (range 20 40 $ slow 16 $ (saw+square)/2)
    # gain 0.7
  d3
    $ stutWith 6 0.1 ((|- n (run 5)).(# crush (run 6)).(# pan perlin))
    $ s "kk/2"
    # n 6
    # shape 0.8
    # distort 0.3
    # legato 6
    # gain 0.8
  d4
    $ sometimes (superimpose ((|* speed (range 2.8 3.2 $ rand)).(plyWith 6 (# accelerate (range "-0.4" "0.4" $ slow 4 $ square)))))
    $ speed "[[1.7 ~]*2 1.45@2]"
    # s "censor:2"
    # gain 0.60
    # distort 0.5
    # lp' (range 3000 5000 $ slow 12 $ isaw) 0.1
    # del' 0.6 0.2 0.21
  all $ (# rvb' 0.5 0.6)
    .(# waveloss 95)
    .(# crush 1)
    .(degradeBy 0.5)

hush


-- oeeeeeppp
bpm(99)

do
  let za = 4--(slow 6 $ run 2 + 2)
  d1
    $ superimpose (
      (# octave 7)
      .(ply (za-1))
      .(|* gain (slow 1 $ sine))
    )
    $ every 4 (iter za)
    $ every 6 (linger 0.1)
    $ superimpose (
      (fast 3)
      .(# octave 2)
      .(# hp' 50 0.3)
    )
    $ s "pingz(3,5)"
  d2
    $ every 5 (# freeze 1)
    $ stutWith za 0.08 (
      (|* speed (run za + 1))
      .(sometimes (# accelerate (rand - 0.5)))
      .(rarely ((1/3) ~>))
    )
    $ speed "[1.7 ~ 1.45@2]"
    # s "censor:2"
    # gain 0.4
  d3
    $ rarely (
        (superimpose (
            (3.3 ~>)
            .(|* speed 8)
            .(|* gain 0.6)
            .(# pan rand)
            .(# accelerate (range "-1.3" "1.6" $ rand))
        ))
    )
    $ loopAt 1
    $ juxBy 0.4 (|* speed (za/3))
    $ almostNever ((# crush za).(# lp' 1400 0.1).(# del' 0.5 (1/za) 0.11))
    $ every 6 (striate 6)
    $ striate za
    $ s "osc:2"
    # distort (slow 7 $ cosine/2)
  all $ (# rvb' 0.5 0.7)
    -- .(# waveloss 76)
    -- .(plyWith 4 (#crush za))

hush

-- aussi!

do
  let za = 2--(slow 2 $ run 15 + 1)--(slow 8 $ run 3 + 3)
  d1
    $ superimpose (
        (fast 3)
        .(# octave 2)
        .(#hp' 50 0.2)
    )
    $ every 4 (iter za)
    $ every 6 (linger (0.1))
    $ euclid za 5
    $ s "pingz"
  d2
    $ superimpose (
        (|* speed za)
        .((za/5) ~>)
        .(stutWith za 0.1 (# accelerate (range "-0.7" "0.9" $ rand)))
    )
    $ speed "[1.7 ~ 1.45]"
    # s "censor:2"
    # gain 0.4
  d3
    $ superimpose (
      (|* speed (za*1.2))
      .((1/za) ~>)
      .(# distort 0.9)
      .(|* gain 0.8)
    )
    $ loopAt 1
    $ rarely (
      (# crush (16 - za))
      .(# lp' 1400 0.2)
      .(# del' (0.7) (1/za) 0.21)
      .(|* gain 0.8)
    )
    $ every za (striate za)
    $ s "osc:3"
    # hp' 40 0.3
  all $ (# rvb' 0.5 0.7)
    .(#waveloss (za*2))

hush

-- rabbiocco

do
  let ti = "<5 3 4 3 2 4 3 2>"
  d1
    $ superimpose (
        (fast (6/ti))
        .(juxBy (perlin - 0.5) (rev.(|- octave 1)))
        .(# octave 3)
    )
    $ rarely (
        superimpose (
            (# octave (run 3 + 7))
            .(plyWith 3 (# coarse (run 8)))
            .(# binshift 0.2)
        )
    )
    $ stutWith ti 0.2 (# up "3")
    $ euclid ti 5
    $ s "pingz"
    # n (range 0 4 $ slow ti $ sine)
  d2
    $ sometimes (
      superimpose (
        (# speed (12*ti))
        .(# gain 0.58)
        .(ply (ti*2))
        .((ti/3.3) ~>)
        .(# del' 0.6 0.21 0.12)
      )
    )
    $ every 2 (chop ti)
    $ loopAt 1
    $ s "osc:3"
    # rmod' (slow 8 $ saw) (3*ti) 0.7
    # accelerate (range "-0.6" "0.3" $ slow 14 $ sine)
  d3
    $ jux (rev.(iter ti))
    $ euclid ti (ti+3)
    $ every 3 (stut ti 0.4 0.13)
    $ s "pitchednoise"
    # gain 1.3
    # ar' 0.0001 0.2
  all $ (# rvb' 0.4 0.7)
--    .(# crush (trigger 1 $ range 16 0 $ slow 20 $ envL))

hush


do
  let ac = "<3 3 [1|5] [2|4] 3 3 3 6 7>"
  d1
    $ juxBy (slow 13 $ sine/2) ((range 0.005 0.02 $ rand) ~>)
    $ every ac (iter ac)
    $ often (|+ n (irand 6))
    $ superimpose (
        (# octave 3)
        .(fast 1.5)
        .(almostNever (fast ac))
    )
    $ almostNever (
        (
          superimpose (
            ((ac*1.1) ~>)
            .(# octave 8)
            .(ply ac)
          )
        )
    )
    $ euclid ac 5
    $ s "pingz"
  d2
    $ loopAt 1
    $ every ac (# accelerate ((1/ac) - 0.5))
    $ superimpose (
        (striate 16)
        .(|* speed (ac+1))
        .(# gain 0.9)
        .(# pan perlin)
        .(# lp' (range 400 1800 $ slow 4 $ tri) (0.1))
    )
    $ s "osc"
    # n ac
    # hp' 40 0.3
    # lp' 400 0.2
  d3
    $ stutWith 3 0.52 (
      (|* speed (ac/3))
      .(striate ac)
      .(|* pan "-1")
      .(rarely (# squiz (ac*2)))
    )
    $ every (1 + ac) (# accelerate "-1")
    $ s "censor"
    # gain 0.6
    # lesl' 2 5 6
    # pan (range "-0.8" "0.8" $ slow 2 $ square)
    # coarse ac
  all $ (# rvb' 0.49 0.6)
    .(# del' 0.6 0.15 0.19)
    -- .(# lbrick 0.71)
    -- .(# waveloss 52)
    -- .(# crush (trigger 1 $ range 16 0 $ slow 30 $ envL))

  hush

  -- domeni

do
  let cz = "<3 3 3 [4|5] 1 3 [3|7] 3 5 6>"
  d1
    $ euclid cz 5
    $ rarely (stut ((cz*2)-2) 0.6 (cz/6))
    $ often (|+ octave 1)
    $ superimpose (
        (# octave 3)
        .(fast cz)
        .(# pan perlin)
        .(# n (range "-3" "3" $ slow cz $ sine))
    )
    $ s "pingz"
    # octave 5
  d2
    $ loopAt "1"
    $ sometimes (
        superimpose (
            (|* speed cz)
            .(|* gain 0.8)
            .(ply cz)
        )
    )
    $ rarely (
      superimpose ((|* speed (cz*2)).(# coarse cz).(|* gain 0.78).(#pan rand))
    )
    $ s "osc"
    # n cz
    # gain 0.75
    # lp' 1200 0.1
  d3
    $ every 4 (iter cz)
    $ superimpose (
        (|+ octave 3)
        .((cz*0.3) ~>)
        .(degradeBy 0.5)
        .(plyWith 4 (|+ octave 2))
        .(# pan (tri))
        .(|* gain 0.75)
    )
    $ s "supercomparator*8"
    # n (scale "minor" "5 4 3 7 8 1 1 0")
    # octave 5
    # gain 0.7
  d4 $ slice 40 "[40..120]" $ s "glass:3" # gain 0.7
  all $ (# rvb' 0.4 0.7).(# del' 0.43 (1/cz) 0.1)


--- aaaaa

bpm (120)

do
  let bv = "<3 3 6 3 3 4 3 3 2 3 3 7>"
  d1
    $ superimpose (
        (# octave 3)
        .(fast (bv))
    )
    $ every 4 (stutWith bv 0.1 (|+ n (bv * (irand 2 - 1))))
    $ every 3 (|+ octave 1)
    $ rarely (|+ n bv)
    $ sometimes (|- bv)
    $ almostNever (|+ octave 2)
    $ sometimesBy (1/bv) ((# s "pings").(|* gain 0.8).(ply (bv-2)))
    $ euclid bv 5
    $ degradeBy 0.3
    $ s "pingz"
    # octave 5
  d2
    $ loopAt (range 0.8 1.2 $ slow 5 $ sine)
    $ superimpose (
      (striate (bv*4))
      .(|* speed (2+bv))
      .(# gain 0.7)
      .(# lp' (range 800 3200 $ slow 13 $ (sine + saw)/2) 0.1)
    )
    $ degradeBy 0.5
    $ n bv
    # s "osc"
    # lp' 800 0.1
    # gain 0.75
  d3
    $ slice 40 "[40..0]"
    $ fast bv
    $ every bv (|* speed "1.2555")
    $ foldEvery [2,5] (|* speed "1.3333")
    $ s "indagine"
    # gain 0.50
    # waveloss (63)
  all
    $ (#rvb' 0.5 0.7)
      .(# del' 0.74 0.12 (1/bv))
      .(# crush 1)

hush

-- no male

do
  let ah = 3
  d1
    $ euclid ah 5
    $ superimpose (
        (# octave 2)
        .(fast ah)
        .(# pan 0.5)
    )
    $ s "pingz"
    # n (slow 2 $ perlin*24)
    # octave (ah*2)
    # del' 0.8 (1/ah) (1/ah)
    # lp' 800 0.45
    # rvb' 0.4 0.6
    # pan (rand)
    # orbit 3
  d2
    $ striate (ah*5)
    $ superimpose (
        (# pan (slow ah $ saw))
        .(|* speed (range (ah+1) (ah*2) $ perlin))
        .(degradeBy (1/ah))
        .(# gain 0.7)
    )
    $ loopAt 1
    $ s "osc:6"
    # orbit 4
    # lp' (range 400 1200 $ slow (ah*2+1) $ tri) (range 0 0.4 $ slow (ah*2+1) $ sine)
    # speed "<0.8 0.8 1 1.2 1.2>"
  d3
    $ every 4 (fast 2)
    $ almostNever (fast ah)
    $ stutWith 8 0.12 ((# n (range "-4" "4" $ slow 2 $ saw)).(# pan (slow 2 $ isaw)))
    $ s "kk/2"
    # n ((ah+1)*"-1")
    # accelerate (range "-0.4" "1.7" $ slow 13 $ tri)
    # hp' 40 0.6
  d4
    $ every 9 (# n ah)
    $ s "orrore/3"
    # gain 0.6
    # waveloss 64

hush

-- zattinu

bpm(110)

do
  let nc = 3
  d1
    $ every 4 (slow nc)
    $ superimpose (
        (# octave 2)
        .(fast (nc/2))
        .(# pan 0.5)
    )
    $ every (nc+2) (|+ octave 2)
    $ euclid nc 5
    $ s "pingz"
    # rvb' 0.5 0.8
    # pan (rand)
    # octave 5
  d2
    $ juxBy (range "-0.8" "0.8" $ slow nc $ square) ((|+ n nc).(striateBy nc 0.85))
    $ s "santoor*2"
    # n "<0 0 2 3>"
    # gain 0.56
    # rvb' 0.4 0.6
  d3
    $ loopAt 1
    $ superimpose (
        (degradeBy 0.5)
        .(|* speed nc)
        .((0.33*nc) ~>)
        .(stut nc 0.4 0.1)
    )
    $ slow 2
    $ s "osc:6*2"
    # gain 0.75
    # speed "<0.8 0.8 1 1.25>"
  d4
    $ sometimes (chop nc)
    $ rarely (slice "32" "[32..0]")
    $ often (# crush nc)
    $ loopAt 0.5
    $ s "emhard:2"
    # gain 0.55
    # rvb' 0.6 0.9
  all $ (jux rev).(# waveloss 95).(# crush 2)

hush

-- reboot

bpm(105)

do
  let vv = 1
  d1
    $ rarely (jux rev)
    $ every (vv+1) (slow vv)
    $ superimpose (
        (# octave 2)
        .(fast (vv/2))
    )
    $ euclid vv 5
    $ every vv (|+ octave 2)
    $ s "pingz"
    # rvb' 0.5 0.8
    # octave 5
  d2
    $ sometimes (|+ n (vv-2))
    $ juxBy (range "-0.8" "0.8" $ slow vv $ square) ((|+ n (vv-1)).(striateBy vv 0.93))
    $ s "santoor*2"
    # gain 0.56
    # n "<0 0 2 3>"
    # rvb' 0.6 0.8
  d3
    $ juxBy (range 0.1 0.3 $ slow 6 $ tri) (rev)
    $ superimpose (
        ((vv*0.77) ~>)
        .(|* speed ((1/vv)+vv))
        .(degradeBy (1/vv))
        .(|* gain 0.76)
        .(stut vv 0.6 0.1)
        .(gap vv)
        .(# accelerate (range "0" (vv/6) $ rand))
        .(# coarse (vv*8))
    )
    $ loopAt 1
    $ slow 2
    $ s "osc:6"
    # gain 0.72
    # speed "<0.8 0.8 1 1.25>"
  d4
    $ sometimesBy 0.34 (chop (vv*2))
    $ sometimesBy 0.23 (|* speed 0.94)
    $ often (# crush 4)
    $ jux (|* speed "-1")
    $ loopAt 0.5
    $ n vv
    # s "emhard"
    # gain 0.54
  all $ (# waveloss (100/vv)).(# crush vv)

hush

-- destrino

bpm(105)

do
  let xc = "3"
  d1
    $ every (xc*2) (linger 0.25)
    $ superimpose (
        (# octave 2)
        .(fast (xc/2))
    )
    $ every 4 (slow xc)
    $ euclid xc 5
    $ s "pingz"
    # rvb' 0.5 0.8
    -- # crush xc-1
  d2
    $ every xc (|+ n xc)
    $ juxBy (range "-0.7" "0.7" $ slow xc $ square) (
      (|+ n 3).(striate' (xc*3) 0.92)
    )
    $ s "santoor*2"
    # gain 0.46
    # rvb' 0.5 0.7
    -- # waveloss 90
  d3
    $ every (xc+2) (# crush 3)
    $ loopAt 1
    $ sometimes (
      superimpose (
        (|* speed ((1/xc)+(xc*2)))
        -- .(stutWith (xc+2) 0.15 (# coarse 2))
        .(plyWith (xc*xc) (# squiz (run 8 * xc)))
        .(# del' 0.87 0.12 0.23)
        .(# crush (irand 3 + 2))
        .(# scram 0.8)
      )
    )
    $ s "osc:6"
    # gain 0.54
    # speed "<0.8 0.8 1 1.166667>"
    # hp' 50 0.34
    -- # waveloss 90
  d4
    $ rarely (striate (xc*3))
    $ almostNever (chop (xc*4))
    -- $ slice 32 "[0..32]"
    $ juxBy (range "-1" "1" $ slow 12 $ sine)(|* speed "0.92")
    $ loopAt 0.5
    $ sometimes (|* speed "-1")
    $ s "emhard:3*2"
    -- # gain 0.78
    # gain 0.28
    # rvb' 0.6 0.8
    -- # crush 1

hush


bpm(105)

do
  -- let cc = "<3 3 3 3 3 3 2 2 4>/3"
  let cc = "3"
  let ga = 1
  d1
    $ every cc (|+ n cc)
    $ superimpose (
      (# octave 2)
      .(fast (cc/2))
    )
    $ euclid cc 5
    $ s "pingz"
    # rvb' 0.7 0.8
    # shape 0.8
    # crush (range 3 7 $ slow 8 $ (sine+isaw)/2)
  d2
    $ every (cc*2) (|+ n cc)
    -- $ degradeBy 1
    $ juxBy
      (range "-1" "1" $ slow (cc*cc) $ (tri + sine)/2)
      ((|+ n cc).(striateBy (cc*3) 0.92))
    $ s "santoor*2"
    # gain (0.55*ga)
    # rvb' 0.6 0.8
    -- # waveloss (98)
  d3
    $ loopAt 1
    -- $ degradeBy 1
    $ almostNever (
        superimpose (
          (|* speed ((cc*cc)+rand))
          .(|* gain 0.71)
          .(# pan rand)
          .(# distort 0.46)
          .(stutWith (cc*2) (1/cc) ((# coarse cc).(# accelerate (rand))))
          .(ply cc)
          .(#orbit 6)
          .(# rvb' 0.8 0.7)
        )
    )
    $ s "osc:6"
    # gain (0.62*ga)
    # hp' 50 0.6
    # rmod' 0.8 (cc*3) 0.5
    # speed "<0.8 0.8 1 1.125>/3"
    -- # waveloss 95
  d4
    $ while "[t t f t f]/2" ((gap (cc*cc).(# del' 0.88 0.33 0.44)))
    $ jux (|* speed "-1")
    $ loopAt 0.6
    $ degradeBy 0.1
    $ s "emhard:3"
    # gain (0.52*ga)
    # rvb' 0.9 0.99
    # distort 0.3
    # crush (range 1 3 $ slow 5 $ tri)

  hush

d1
  $ loopAt 1.4
  $ jux (|* speed "-1")
  $ gap 8
  $ degradeBy (range 1 0 $ slow 12 $ envL)
  $ sometimes (# coarse "<20 15 25 34>")
  $ s "emhard"
  # distort (range 0.1 0.5 $ slow 9 $ sine)
  # crush (range 1 4 $ slow 9 $ sine)
  # del' 0.66 0.44 0.55

hush
