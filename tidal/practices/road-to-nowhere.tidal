do
  let ag = "<1 3 3 3 2 2 1 1 1>"
  d1
    $ degradeBy 1
    $ superimpose (
      (# octave 3)
      .(fast (ag/2))
    )
    $ every 4 (slow (ag/2))
    $ euclid ag 5
    $ s "pingz"
    # rvb' 0.8 0.85
    # crush 1
  d2
    $ superimpose (
        (# orbit 6)
        .(|* sp 12)
        .(|* gain 1)
        .(# shape 0.2)
        .(# coarse "<2 4 0 6 8 1>")
        .(# distort 0.2)
        .(# pan perlin)
        .(# del' 0.23 0.33 0.56)
        .(rand ~>)
    )
    $ every 5 (|* sp (4/3))
    $ every 6 (|* sp (8/9))
    $ jux (striateBy ag 0.95)
    $ degradeBy 1
    $ s "santoor*2"
    |* g 0.68
    # rvb' 0.8 0.75
    # waveloss 99
  d3
    $ superimpose (
        (|* speed ((1/ag)*8))
        .(|* g 0.9)
        .(stut ag 0.6 0.1)
        .(# orbit 7)
        .(rarely (# accelerate (1/ag * (rand-0.5))))
        .(# rvb' 0.99 0.95)
        .(# pan rand)
        .(sometimesBy 0.25 (ply ag))
    )
    $ loopAt 1
    $ degradeBy 1
    $ s "osc:6"
    |* g 0.82
    # hp' 40 0.5
    # sp "<0.8 0.8 1 1.125>/3"
    # distort 0.98
    # waveloss 98
  d4
    $ juxBy 0.3 (|* sp 1.2)
    $ rarely (gap ag)
    $ loopAt (ag/2)
    $ s "emsoft:2"
    |* g 0.74
    # rvb' 0.99 0.98
    # distort 0.99
    # del' 0.99 0.33 0.66

hush
