-- transnodal live
do
  bpm 113
  all $ (# verb 0.74 0.7 "t" (1/8)).(# tanh 1.5).(# shape 0.1)

all $ (# verb 0.74 0.7 "t" (1/8)).(# tanh 1.5).(# shape 0.1)
all $ id

do -- A
  bpm 111
  d1
    $ while "<f!10 t!3>" ((chew 6 8))
    $ while "<f!3 t>" (iter 4)
    $ chunk 4 ((# pan rand).(|+ note 1.23))
    $ sh "q" id
    $ every 4 (rev)
    -- $ while "<t f!2>" (
    $ while (slow 8 $ binary 143) (
      off "e" (
        (|* sp 2).(plyWith 4 (|+ n "0.2"))
        .(# bs (slow 12 $ tri))
        .(# pan (slow 4 $ tri))
        .(# lp (range 100 1000 $ slow 18 $ cosine) 0.15)
        .(|* g 0.9)
      )
    )
    $ off "q" (h 2)
    $ n "0 [2.3 [4.4|6]]"
    # s "sin"
    # oc "[4|5|6]"
    |* g 0.9

hush

do -- B
  bpm 123
  d1
    $ while "<f!8 t!2>" ((db "t").(stutWith 3 "s" ((|* sp 1.1).(|* pan rand))))
    $ every 3 (rev)
    $ every 4 (iter 2)
    $ sh "q" (# hp 66 0.3)
    $ off "3s" ((|+ oc 3).(# pan rand).(degradeBy "h"))
    $ off "e" ((|+ oc 2).(# lpf 1000).(degradeBy 0.5))
    $ off "s" ((|+ oc 1).(# pan "[0 1 0 1]"))
    $ n "[2(3,8), 1(1,8,3), 8(7,16,2)]"
    # s "sin"
    # oc "[4|5|6]"
    |* g 0.6
    # del (1/8) "t" "t"

hush

do -- C
  bpm 123
  d1
    $ while "<f!6 t!4>" (
      (bite 4 (segment "<2!2 1!2>" $ irand 4))
      .(sb "t" (stutWith 12 (1/128) ((|* g 0.95).(# pan rand))))
    ) -- 4
    $ si ((# pan (slow 2 cosine)).(|+ oc 2).(fast 2)) -- 1
    $ si ((slow 3).(|- oc 5).(# legato 2.5).(|* g 0.9)) -- 2
    $ stutWith 2 (1/12) ((|* g 0.9).(|* sp "[q|h]")) -- 3
    $ s "sin:0*6"
    # oc 6
    # legato 0.1
    # pan (slow 2 sine)
    |* g 0.8

hush

do -- D
  bpm 128
  d1
    $ sb (slow 16 tri) (db (slow 4 cosine/2))
    $ while (slow 8 $ binary 21) (si (
      (hurry 4)
      .(slow 2)
      .(|* g 0.78)
      .(|+ oc "<2 1 2!2 0>")
    ))
    $ si ((hurry "h").(|* g 0.8))
    $ juxBy (slow 8 $ ((saw*2)-1)) (slow "h")
    $ n "0 5 36 24 3 18"
    # s "sin"
    # oc 3

hush

do -- E
  bpm 100
  d1
    $ chunk 5 ((off "h" ((slow 2).(|* sp 1.5))).(# pan 0.2))
    $ chunk 3 ((off "h" (hurry 2)).(# pan 0.8))
    $ layer [
      id
      .(every 3 (|+ oc 1))
      .(sb (slow 6 tri) (stutWith (irand 6 + 1) "s" (
        (|* g 0.95).(|+ oc (choose [-1,0,1]))
        .(# lpf 1200).(|* legato 0.9).(# pan rand)))
      )
      .(sb "x" ((|+ dis 0.3).(|* g 0.7)))
      .(sb "t" (+| n (segment 2 $ scale "minor" (irand 8))))
      .(|* g 0.9)
      ,
      (euclid 7 8)
      .(|- oc 2)
      .(# hp 54 0.2)
      .(# ac "-0.4")
      .(# shape 0.2)
      ,
      (slow 4)
      .(db "q")
      .(sb "h" (off "h" ((|- oc 2).(|* tremolo 2 1.5))).(# pan rand))
      .(|+ n (choose [0,3,5]))
      .(|+ dis 0.3)
      .(|+ oc 1)
      .(|* g 0.43)
      .(# ac ((range 0.5 1 $ rand)*(choose [-1,1])))
      .(# tremolo (irand 4 + 1) 0.5)
      ,
      (+| n "~!3 [3|3*2]")
      .(# lpf 800)
      .(|* g 0.8)
      ,
      (euclid 13 16)
      .(|* sp 12)
      .(# legato 2)
      .(|* g 0.6)
      .(# scram (slow 18 $ tri/3))
    ]
    $ s "sin:0"
    # oc 5
    |* g 0.8

hush

do -- F
  bpm 101
  d1
    $ chew "<1!4 2 5!2 3 4 2>/2" "<2 4!4 6>" -- play with this!
    $ euclid 2 3
    $ rarely (|- note "4")
    $ chunk 3 (off "q" (|+ note "[3|5]"))
    $ layer [
      id
      ,
      ("e" ~>).(hurry 3).(+| note "[1 2 3]").(sb "t" (plyWith 3 (|- note 12)))
      ,
      ("h" ~>).(|- oc 2).(# ac "-4").(fast 2).(|+ tanh "h")
      ,
      (every 3 (shut)).(# pan (choose [0,1])).(hurry 12).("h" ~>)
      .(rarely (|- note "5")).(fast 2).(#o 8).(#del "h" "t" "t")
      .(|* g 0.75)
    ]
    $ s "sin:0"
    # oc 5
    # legato 2.5
    |* g 0.8

hush

do -- G - suona da sola
  resetCycles
  bpm 104
  d1
    $ off "e" ((chew 4 (slow 4 $ r 4)).(jux press).(|* g 0.9))
    $ chew "<2!4 1!4 3!4 4!4>" 4
    $ chunk 7 ((|+ oc 1).(|* g 0.8))
    $ layer [
      (slow 4).(# lpf 400)
      .(# ac "-0.2")
      .(|- oc 3)
      ,
      (iter 4).(every 2 rev).(sb "s" (stut 2 "w" "s")).(|* g 0.8)
      ,
      (slow 8)
      .(|* g 0.9)
      .(# lp 1000 0.1)
      .(stutWith 8 "s" (|* g 0.9))
      .(# legato "[t|h]")
      .(# pan cosine)
      .(scramble 3)
      ,
      (|* g 0.8).(fast 4).(# pan perlin).(# freeze 1)
    ]
    $ n "13 10 6.5 14@h 10.5@h"
    # s "sin"
    # oc 6
    |* g 0.9
    # shape 0.3

hush


do -- H
  bpm 100
  d1
    $ fast 2
    $ bite 2 (r 4) -- ottimo come intro
    -- $ bite 2 (segment 1 $ r 4) $ chunk "<2 3>" (scramble "3") -- not bad
    -- $ bite "<4!2 8 16>" "<3!8 4!2 6 7 8>" -- this
    $ layer [
      id.(# ar 0.2 0.01).(ply "<3!3 4!4>").(# pan rand)
      ,
      (h 3)
      .(|* g 0.5)
      .(sb 0.1 (|+ oc 1))
      .(sb (slow 5 sine) (|+ note 7))
      .(while "<t!2 f>" (stutWith 6 "s" ((# pan (slow 4 sine))).(|* g 0.9)))
      .(ply 2)
      .(# lp (range 1000 4000 $ slow 3 sine) 0.4)
      ,
      (h "q")
      ,
      (h "e").(|* g 0.8)
    ]
    $ n "6 4"
    # s "sin"
    # oc 5

hush


do -- I
  bpm 86
  d1
    $ bite 4 "1!2"
    -- $ bite 2 "2!4" -- fiiiiico!
    $ chunk 2 ((slow (choose [2,4])).(iter 4))
    $ chunk 3 (|* sp (5/4))
    $ chunk 4 (|/ sp (9/8))
    $ chunk 5 (|/ sp (7/6))
    $ juxBy (slow 8 $ sine/2) rev
    $ chunk 2 (# pan rand)
    $ layer [
      (|- oc 1).(chop 8).("3s" ~>).(stut 2 "w" "s").(|+ n "1 0 4 8").(iter 4),
      (|- oc 4).(fast 3),
      (|- oc 1).(slow 1.5).(# ac "-0.5").(# legato 0.4),
      (|- oc 3),
      (|+ oc 1).(chop 16).("7s" ~>),
      (|+ oc 2).(chop 28).("11s" ~>).(chunk 3 (fast 2).(# lp 2000 0.1)),
      (|+ oc 3).(|* g 0.6).(# bs 0.4).(slice 2 (every 3 (rev) $ "{0 1!2 0*3}%8")).(#pan perlin)
    ]
    $ n "0"
    # s "sin"
    # oc "[5|6]"
    |* g 0.8

hush

do -- J
  bpm 125
  d1
    $ chunk 4 (slow 2)
    $ chunk 3 (|+ note 1.4)
    $ chunk 5 (si press.(|* g 0.8))
    -- $ bite 4 "4!4"
    $ chew "4" "<[3 2 1 0]!2 [0 .. 3]!2 1*2>"
    $ layer [
      (every 2 (si ((bite 12 "1*32").(|+ oc 1).(|* pan rand)).(|* g 0.8)))
      ,
      (|+ oc 4).(slow 1.5)
      .(ply 2)
      .(si ((hurry "e").press.(# lp 1200 0.1)))
      .(# pan (slow 2 sine)).(|* g 0.7).(rarely rev).(# lp 2200 0.1)
      ,
      (slow 2).(|- oc 2).(# ac "-0.5").(stut 3 "w" (1/6)).(#legato 1.2).(|- note 5)
    ]
    $ iter 3
    $ n "[3(5,12), 7(4,6), 1(2,3)]"
    # s "sin"
    # oc "[4|5|6]"

hush

d1
  $ si ((# legato 2).(db "t").(hurry 5))
  $ si ((|* sp 4).(# pan (slow 4 cosine)))
  $ s "sin:0*16"
  # pan (slow 4 saw)
  # oc 5
